/* Styles extracted from game_hangman_improved */

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        color: #333;
        overflow-x: hidden;
    }

    .hangman-game {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 10px 20px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        color: white;
        text-decoration: none;
    }

    .game-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--border-radius);
        padding: 25px;
        margin-bottom: 25px;
        box-shadow: var(--shadow-lg);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 20px;
    }

    .game-info h1 {
        font-size: 2.5rem;
        font-weight: 700;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .game-info .game-subtitle {
        font-size: 1.1rem;
        color: #666;
        font-weight: 400;
    }

    .game-stats {
        display: flex;
        gap: 30px;
        flex-wrap: wrap;
    }

    .stat-item {
        text-align: center;
        min-width: 100px;
    }

    .stat-label {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 5px;
        font-weight: 500;
    }

    .stat-value {
        font-size: 1.8rem;
        font-weight: 700;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    #timer-display {
        padding: 8px 16px;
        border-radius: 20px;
        background: var(--primary-gradient);
        color: white;
        font-weight: 600;
        font-size: 1.2rem;
        box-shadow: var(--shadow-sm);
    }

    #timer-display.warning {
        background: var(--warning-gradient);
        animation: pulse 1.5s infinite;
    }

    #timer-display.danger {
        background: var(--danger-gradient);
        animation: pulse 1s infinite;
    }

    @keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }

    .game-content {
        flex: 1;
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 30px;
        margin-bottom: 30px;
    }

    .hangman-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--border-radius);
        padding: 30px;
        box-shadow: var(--shadow-lg);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
    }

    .hangman-container::before {
        content: "";
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(102, 126, 234, 0.1) 0%, transparent 70%);
        z-index: 0;
    }

    .hangman-svg {
        width: 100%;
        max-width: 300px;
        height: auto;
        position: relative;
        z-index: 1;
    }

    .hangman-part {
        opacity: 0;
        transform: scale(0);
        transform-origin: 0 0;
        transition: opacity 0.5s ease, transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .hangman-part.show {
        opacity: 1;
        transform: scale(1);
    }

    .word-section {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--border-radius);
        padding: 30px;
        box-shadow: var(--shadow-lg);
        display: flex;
        flex-direction: column;
        gap: 25px;
    }

    .word-display {
        display: flex;
        justify-content: center;
        gap: 10px;
        flex-wrap: wrap;
        margin-bottom: 20px;
    }

    .letter-slot {
        width: 50px;
        height: 60px;
        border: 3px solid #ddd;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.8rem;
        font-weight: 700;
        background: white;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
    }

    .letter-slot.filled {
        border-color: #4facfe;
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
        transform: scale(1.05);
        animation: letterReveal 0.6s ease;
    }

    .letter-slot.hint {
        border-color: #43e97b;
        background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        color: white;
    }

    @keyframes letterReveal {
        0% { transform: scale(0) rotate(180deg); opacity: 0; }
        50% { transform: scale(1.2) rotate(0deg); opacity: 1; }
        100% { transform: scale(1.05) rotate(0deg); opacity: 1; }
    }

    .word-hint {
        text-align: center;
        padding: 20px;
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        border-radius: 12px;
        color: white;
        font-size: 1.2rem;
        font-weight: 500;
        box-shadow: var(--shadow-md);
        opacity: 0;
        transform: translateY(20px);
        transition: var(--transition);
    }

    .word-hint.show {
        opacity: 1;
        transform: translateY(0);
    }

    .alphabet-container {
        margin-top: 20px;
    }

    .alphabet-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));
        gap: 10px;
        max-width: 600px;
        margin: 0 auto;
    }

    .letter-btn {
        width: 50px;
        height: 50px;
        border: none;
        border-radius: 12px;
        background: white;
        color: #333;
        font-size: 1.2rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
        position: relative;
        overflow: hidden;
    }

    .letter-btn::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--primary-gradient);
        opacity: 0;
        transition: opacity 0.3s;
        z-index: 0;
    }

    .letter-btn span {
        position: relative;
        z-index: 1;
    }

    .letter-btn:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-md);
        color: white;
    }

    .letter-btn:hover::before {
        opacity: 1;
    }

    .letter-btn:active {
        transform: translateY(-1px);
    }

    .letter-btn.correct {
        background: var(--success-gradient);
        color: white;
        cursor: default;
        transform: scale(0.9);
    }

    .letter-btn.incorrect {
        background: var(--danger-gradient);
        color: white;
        cursor: default;
        transform: scale(0.9);
        animation: shake 0.5s ease;
    }

    .letter-btn:disabled {
        cursor: default;
        opacity: 0.6;
    }

    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        75% { transform: translateX(5px); }
    }

    .game-feedback {
        text-align: center;
        margin: 20px 0;
        padding: 15px;
        border-radius: 12px;
        font-size: 1.1rem;
        font-weight: 600;
        opacity: 0;
        transform: translateY(20px);
        transition: var(--transition);
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
    }

    .game-feedback.show {
        opacity: 1;
        transform: translateY(0);
    }

    .feedback-success {
        background: rgba(79, 172, 254, 0.2);
        color: #0066cc;
        border: 2px solid rgba(79, 172, 254, 0.3);
    }

    .feedback-error {
        background: rgba(250, 112, 154, 0.2);
        color: #cc0066;
        border: 2px solid rgba(250, 112, 154, 0.3);
    }

    .feedback-info {
        background: rgba(102, 126, 234, 0.2);
        color: #4c63d2;
        border: 2px solid rgba(102, 126, 234, 0.3);
    }

    .game-controls {
        display: flex;
        justify-content: center;
        gap: 15px;
        flex-wrap: wrap;
        margin-bottom: 30px;
    }

    .game-controls .btn {
        padding: 12px 24px;
        border: none;
        border-radius: 12px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
        display: flex;
        align-items: center;
        gap: 8px;
        min-width: 140px;
        justify-content: center;
    }

    .btn-info {
        background: var(--primary-gradient);
        color: white;
    }

    .btn-warning {
        background: var(--warning-gradient);
        color: white;
    }

    .btn-danger {
        background: var(--danger-gradient);
        color: white;
    }

    .btn-success {
        background: var(--success-gradient);
        color: white;
    }

    .game-controls .btn:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-md);
    }

    .game-result {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 1000;
        backdrop-filter: blur(5px);
    }

    .result-content {
        background: white;
        border-radius: var(--border-radius);
        padding: 40px;
        max-width: 500px;
        width: 90%;
        text-align: center;
        box-shadow: var(--shadow-lg);
        transform: scale(0.8);
        opacity: 0;
        transition: var(--transition);
    }

    .game-result.show .result-content {
        transform: scale(1);
        opacity: 1;
    }

    .result-content h2 {
        font-size: 2.2rem;
        font-weight: 700;
        margin-bottom: 20px;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .result-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 20px;
        margin: 30px 0;
    }

    .result-stat {
        text-align: center;
    }

    .result-value {
        font-size: 2rem;
        font-weight: 700;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        display: block;
        margin-bottom: 5px;
    }

    .result-label {
        font-size: 0.9rem;
        color: #666;
        font-weight: 500;
    }

    .result-actions {
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
        margin-top: 30px;
    }

    /* Конфетти */
    .confetti {
        position: fixed;
        width: 10px;
        height: 10px;
        background: #f00;
        top: -10px;
        z-index: 1001;
        animation: confetti-fall linear forwards;
    }

    @keyframes confetti-fall {
        0% {
            opacity: 1;
            transform: translateY(0) rotate(0deg);
        }
        100% {
            opacity: 0;
            transform: translateY(100vh) rotate(720deg);
        }
    }

    /* Адаптивность */
    @media (max-width: 768px) {
        .game-content {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .game-header {
            flex-direction: column;
            text-align: center;
        }

        .game-stats {
            justify-content: center;
        }

        .game-info h1 {
            font-size: 2rem;
        }

        .alphabet-grid {
            grid-template-columns: repeat(6, 1fr);
        }

        .letter-btn {
            width: 45px;
            height: 45px;
            font-size: 1rem;
        }

        .letter-slot {
            width: 40px;
            height: 50px;
            font-size: 1.5rem;
        }
    }

    @media (max-width: 480px) {
        .hangman-game {
            padding: 15px;
        }

        .game-header,
        .hangman-container,
        .word-section {
            padding: 20px;
        }

        .alphabet-grid {
            grid-template-columns: repeat(5, 1fr);
            gap: 8px;
        }

        .letter-btn {
            width: 40px;
            height: 40px;
            font-size: 0.9rem;
        }

        .game-controls {
            flex-direction: column;
            align-items: center;
        }

        .game-controls .btn {
            width: 100%;
            max-width: 200px;
        }
    }

    /* Анимации для повешенного человечка из 'ideas' */
    @keyframes physicsSwing {
        0% { transform: rotate(0deg); }
        10% { transform: rotate(8deg); }
        20% { transform: rotate(-6deg); }
        30% { transform: rotate(5deg); }
        40% { transform: rotate(-4deg); }
        50% { transform: rotate(3deg); }
        60% { transform: rotate(-2deg); }
        70% { transform: rotate(1deg); }
        80% { transform: rotate(0deg); }
        100% { transform: rotate(0deg); }
    }

    @keyframes limbTwitch {
        0%, 100% { transform: rotate(0deg); }
        20% { transform: rotate(10deg); }
        40% { transform: rotate(-8deg); }
        60% { transform: rotate(5deg); }
        80% { transform: rotate(-3deg); }
    }

    .hangman-body.hanging {
        animation: physicsSwing 3s ease-in-out infinite;
        transform-origin: 120px 60px; /* Центр головы */
    }

    .hangman-body.hanging #leftArm,
    .hangman-body.hanging #rightArm {
        animation: limbTwitch 1.5s ease-in-out infinite;
        transform-origin: 105px 90px; /* Левое плечо */
    }

    .hangman-body.hanging #rightArm {
        transform-origin: 135px 90px; /* Правое плечо */
    }

    .hangman-body.hanging #leftLeg,
    .hangman-body.hanging #rightLeg {
        animation: limbTwitch 1.8s ease-in-out infinite;
        transform-origin: 112px 145px; /* Левое бедро */
    }

    .hangman-body.hanging #rightLeg {
        transform-origin: 128px 145px; /* Правое бедро */
    }

    @keyframes sadBrows {
        0% { } /* Original path will be set by SVG */
        100% { d: path("M 112 55 Q 115 58 118 55"); } /* More pronounced sadness */
    }
    
    .hangman-body.hanging #leftBrow {
        animation: sadBrows 0.8s ease-in-out forwards;
        d: path("M 112 53 Q 115 50 118 53"); /* Initial state for left brow */
    }
    .hangman-body.hanging #rightBrow {
        animation: sadBrows 0.8s ease-in-out forwards; /* Assuming same animation for right */
        d: path("M 122 53 Q 125 50 128 53"); /* Initial state for right brow */
        animation-name: sadBrowsRight; /* Use a different name if paths are different or mirror transform */
    }
    
    @keyframes sadBrowsRight { /* Example if right brow needs different path */
        0% { }
        100% { d: path("M 122 55 Q 125 58 128 55"); }
    }

    @keyframes sadMouth {
        0% { } /* Original path will be set by SVG */
        100% { d: path("M 115 65 Q 120 62 125 65"); } /* Sad mouth */
    }

    .hangman-body.hanging #mouth {
        animation: sadMouth 0.8s ease-in-out forwards;
        d: path("M 115 63 Q 120 66 125 63"); /* Initial smiling mouth from ideas SVG */
    }

    @keyframes hangmanFadeOut {
        0% { 
            opacity: 1;
            filter: brightness(1);
        }
        70% { 
            opacity: 0.8;
            filter: brightness(0.7);
        }
        100% { 
            opacity: 0.6;
            filter: brightness(0.5) sepia(0.8) hue-rotate(-15deg); /* More dramatic fade */
        }
    }

    .hangman-container.game-over { /* This class will be added by JS */
        animation: hangmanFadeOut 2s ease-in-out forwards;
    }
    /* Конец добавленных CSS анимаций */